x-application-volumn: &app-volumne
  - ".:/usr/project-s"

services:
  core:
    hostname: core
    container_name: app-core
    image: node:latest
    depends_on:
      - database
      - maildev
      - storage
      # - redis
    ports:
      - 8080:8080
    volumes: *app-volumne
    command: >
      bash -c "cd ./usr/project-s/ && 
      npm install --workspace=applications/core --loglevel verbose && 
      cd ./applications/core &&
      npm run start:dev"
  backoffice:
    container_name: app-backoffice
    image: node:latest
    depends_on:
      - core
    ports:
      - 3001:3001
    volumes: *app-volumne
    command: >
      bash -c "cd ./usr/project-s/ && 
      npm install --workspace=applications/backoffice --loglevel verbose && 
      cd ./applications/backoffice &&
      npm run dev"
  platform:
    container_name: app-platform
    image: node:latest
    depends_on:
      - core
    ports:
      - 3002:3002
    volumes: *app-volumne
    command: >
      bash -c "cd ./usr/project-s/ && 
      npm install --workspace=applications/platform --loglevel verbose && 
      cd ./applications/platform &&
      npm run dev"
  database:
    hostname: database
    container_name: database
    image: postgres
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=local
      - POSTGRES_PASSWORD=local
  maildev:
    hostname: maildev
    container_name: smtp-service
    image: maildev/maildev
    ports:
      - "1080:1080" # http://localhost:1080
      - "1025:1025"
  storage:
    hostname: storage
    container_name: storage-service
    image: quay.io/minio/minio
    ports:
      - '9000:9000'
      - '9001:9001' # http://localhost:9001
    environment:
      - MINIO_ROOT_USER=local
      - MINIO_ROOT_PASSWORD=12345678
    volumes:
      - 'storage:/data'
    command: ["server", "/data", "--console-address", ":9001"]
  jeager:
    hostname: jeager
    container_name: tracing-service
    image: jaegertracing/all-in-one
    ports:
      - '16686:16686' # http://localhost:16686
      - '4317:4317'
      - '4318:4318'
      - '9411:9411'
  prometheus:
    hostname: prometheus
    container_name: metrics-service
    image: prom/prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - '9090:9090' # http://localhost:9090
    command: 
      - --config.file=/etc/prometheus/prometheus.yml
      - --enable-feature=otlp-write-receive
  redis:
    hostname: redis
    container_name: store-redis
    image: redis
    ports:
      - 6379:6379
    volumes:
      - redis_volume:/data
    command:
      [
        "redis-server",
        "--save",
        "60",
        "1",
        "--loglevel",
        "warning"
      ]
  redis-commander:
    container_name: redis-commander
    hostname: redis-commander
    image: ghcr.io/joeferner/redis-commander:latest
    restart: always
    environment:
      - REDIS_HOSTS=store-redis
    ports:
      - "8081:8081" # http://localhost:8081
    depends_on:
      - redis
volumes:
  redis_volume:
  storage:
    driver: local
    

  